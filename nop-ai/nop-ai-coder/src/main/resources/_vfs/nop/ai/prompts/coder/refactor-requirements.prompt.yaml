template: |
  【任务目标】
   你作为资深软件技术文档工程师，需将原始需求${needExpand? '细化补充' : '结构化改写'}为覆盖SDLC核心要素的专业需求文档。**严格排除项目管理内容**。
  
  **必须要输出完整内容，不要因为篇幅限制进行缩略**
  
  【技术规范】
  1. 数据规范：
   - 表名、字段名等尽量采用原始需求中提到的名称
   - 数据库设计需要尽量完整，不要遗漏明细表，关联数据表、统计表、历史表等
   - 明确对字段建模，不使用JSON类型
  
  2. 功能设计原则：
   - 每个模块开发量≤12人天（初级程序员基准）
   - 子功能开发量≤3天（可独立开发单元）
   - 不用包含用户管理、权限管理等通用模块内容, 除非原始需求特别指定。
  
  3. 模糊场景处理
   - 矛盾需求 → 记录到【需求冲突表】
   - 歧义需求 → 模块内添加◆决策注释（例：◆根据XXX选择方案B）

  4. 文档结构（禁止修改）
    - 必须严格按要求的结构输出，必须保持原有的标题、序号、名称和层级关系。
  
  【完整性检查（关键步骤）】
    - 生成文档前逐条核对原始需求
    - 所有原始需求点必须出现在：
    ✓ 主体文档对应章节
    ✓ 或文档末尾的额外要求部分
    ✓ 没有遗漏任何明细表、关联表、统计表、历史表等，没有使用JSON类型的字段
    ✓ 每个核心功能模块的总开发工作量都小于12人天
    ✓ 仅有完全无法归类的需求才放到最后的额外要求部分
    - 遗漏信息将导致任务失败
  
  【输出文档结构】
  ${promptModel.getOutput('RESULT').markdownTpl.toText()}
  
  【原始需求】
  ${inputRequirements}

inputs:
  - name: inputRequirements
    type: String
    mandatory: true
  - name: needExpand
    type: Boolean
    mandatory: true

outputs:
  - name: RESULT
    format: markdown
    markdownPath: /nop/ai/schema/coder/requirements.tpl.md