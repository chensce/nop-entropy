<?xml version="1.0" encoding="UTF-8"?>

<task x:schema="/nop/schema/xdef.xdef" xmlns:x="/nop/schema/xdsl.xdef"
      xmlns:xdef="/nop/schema/xdef.xdef" xmlns:task="task">


    <xdef:define xdef:name="TaskStepModel"
                 displayName="string">

        <!-- 验证输入数据 -->
        <validator xdef:value="xpl"/>

    </xdef:define>

    <steps xdef:body-type="list" xdef:key-attr="name" xdef:bean-child-name="step" xdef:name="TaskStepsModel"
           xdef:bean-body-type="List&lt;io.nop.task.model.TaskStepModel>" xdef:bean-sub-type-prop="type">

        <step name="!var-name" xdef:ref="TaskStepModel" next="step-name"
              xdef:name="XplTaskStepModel">
            <input name="var-name" xdef:unique-attr="name"/>
            <output name="var-name" xdef:unique-attr="name"/>

            <!-- 不满足条件的时候将会自动跳过本步骤 -->
            <when xdef:value="xpl-predicate"/>

            <!-- source段中使用XPL模板语言 -->
            <source xdef:value="xpl"/>
        </step>

        <!--
        退出steps或者loop
        -->
        <exit name="!var-name" xdef:ref="TaskStepModel" xdef:name="ExitTaskStepModel" next="step-name">
            <!-- 不满足条件的时候将会自动跳过本步骤 -->
            <when xdef:value="xpl-predicate"/>
            <source xdef:value="xpl"/>
        </exit>

        <!-- 退出整个工作流 -->
        <end name="!var-name" xdef:ref="TaskStepModel" xdef:name="EndTaskStepModel">
            <!-- 不满足条件的时候将会自动跳过本步骤 -->
            <when xdef:value="xpl-predicate"/>
            <source xdef:value="xpl"/>
        </end>

        <!--
           依次执行子步骤，一般情况下以最后一个步骤的返回值作为整体的返回值
           -->
        <sequential name="!var-name" xdef:ref="TaskStepModel" next="step-name" nextOnError="step-name">
            <!-- 不满足条件的时候会跳过本步骤 -->
            <when xdef:value="xpl-predicate"/>

            <!-- 顺序执行的子步骤 -->
            <steps xdef:ref="TaskStepsModel"/>
        </sequential>

        <!--
        类似于for循环语句，不断执行body
        -->
        <loop name="!var-name" xdef:ref="TaskStepModel" xdef:name="LoopTaskStepModel" next="step-name"
              nextOnError="step-name"
              indexName="var-name" varName="var-name" itemsExpr="!expr" maxCount="!int=0" varType="generic-type">
            <!-- 不满足条件的时候会跳过本步骤，不会进入循环 -->
            <when xdef:value="xpl-predicate"/>
            <!-- 循环执行直到until条件为真才退出循环。第一次执行时不检查until条件 -->
            <until xdef:value="xpl-predicate"/>
            <steps xdef:ref="TaskStepsModel"/>
        </loop>

        <!--
        类似于switch语句。根据decider的返回结果动态选择执行哪个分支
        -->
        <choose name="!var-name" xdef:ref="TaskStepModel" xdef:name="ChooseTaskStepModel">
            <!-- 不满足条件的时候将会自动跳过本步骤 -->
            <when xdef:value="xpl-predicate"/>

            <decider xdef:value="xpl"/>

            <!--
             @match 用于匹配decider返回的值
             @next 满足匹配条件后迁移到指定步骤
             -->
            <case match="!string" next="step-name" xdef:unique-attr="match"/>

            <otherwise next="step-name"/>
        </choose>

    </steps>

    <!-- 仅当需要周期定时执行时才生成这个节点 -->
    <task:schedule cronExpr="cron-expr"/>

    <task:import>
        <!-- 引入依赖的外部服务函数并声明所依赖的方法 -->
        <service name="!string" xdef:unique-attr="name">
            <description>string</description>
            <method name="!var-name" xdef:unique-attr="name">
                <description>string</description>
                <arg name="!var-name" type="java-type" xdef:unique-attr="name"/>
            </method>
        </service>
    </task:import>
</task>